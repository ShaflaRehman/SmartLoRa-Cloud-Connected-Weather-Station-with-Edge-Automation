#include <WiFi.h>  // Include the WiFi library
#include <ThingSpeak.h>  // Include the ThingSpeak library
#include <SPI.h>
#include <LoRa.h>
#include <DHT.h>

// Define LoRa pins
#define ss 5
#define rst 14
#define dio0 2

// Define DHT11 pin and type
#define DHTPIN 4       // Connect DHT11 data pin to GPIO4
#define DHTTYPE DHT11  // Using DHT11 sensor
// Define Raindrop Sensor pin
#define RAINDROP_PIN 34  // Connect the raindrop sensor to GPIO34 (ADC1)

// Initialize DHT sensor
DHT dht(DHTPIN, DHTTYPE);
// WiFi credentials
const char *ssid = "Redmi 10A";  // Replace with your WiFi SSID
const char *password = "password";  // Replace with your WiFi password

// ThingSpeak credentials
unsigned long channelID = 2796602;  // Replace with your channel ID
const char *writeAPIKey = "D6H6XHG9LMQ2FIAF";  // Replace with your API Write Key

WiFiClient client;  // Create an instance of WiFiClient
unsigned long lastTime = 0;  // Track the time between uploads
unsigned long timerDelay = 5000;  // 5 seconds delay between uploads

void setup() {
  // Start serial communication for debugging
  Serial.begin(9600);
  Serial.println("LoRa Transmitter with DHT11 and Raindrop Sensor Starting...");
  
  // Initialize LoRa 
  LoRa.setPins(ss, rst, dio0);
  while (!LoRa.begin(433E6)) { // Set LoRa frequency to 433 MHz
  Serial.println("LoRa initialization failed. Retrying...");
  delay(500);
  }
  LoRa.setSyncWord(0xF3); // Set sync word to avoid interference
  Serial.println("LoRa Initialized Successfully!");

  // Connect to WiFi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");
    // Read data from the sensors (replace with actual sensor code)
  
  // Initialize ThingSpeak
  ThingSpeak.begin(client);
    // Initialize DHT sensor
  dht.begin();
  // Initialize raindrop sensor settings
  analogReadResolution(12);         // 12-bit resolution (0-4095)
  analogSetAttenuation(ADC_11db);   // Full range (~3.3V)
}
void loop() {
  float humidity = 0;  // Replace with DHT11 reading
  float temperature = 0;  // Replace with DHT11 reading
  int rainValue = 0;  // Replace with Raindrop sensor reading
  // Read temperature and humidity from DHT11
  temperature = dht.readTemperature();
  humidity = dht.readHumidity();

  // Check if DHT readings are valid
  if (isnan(temperature) || isnan(humidity)) {
    Serial.println("Failed to read from DHT sensor!");
    return;
  }

  // Read raindrop sensor value
  rainValue = analogRead(RAINDROP_PIN);

  // Print values to Serial Monitor
  Serial.print("Temperature: ");
  Serial.print(temperature);
  Serial.print("°C, Humidity: ");
  Serial.print(humidity);
  Serial.print("%, Raindrop Sensor: ");
  Serial.println(rainValue);

  // Upload data to ThingSpeak every 20 seconds
  if (millis() - lastTime > timerDelay) {
    lastTime = millis();

    // Upload the sensor values to ThingSpeak
    ThingSpeak.setField(1, humidity);  // Field 1 for humidity
    ThingSpeak.setField(2, temperature);  // Field 2 for temperature
    ThingSpeak.setField(3, rainValue);  // Field 3 for rain sensor value

    // Write data to ThingSpeak channel
    int httpResponseCode = ThingSpeak.writeFields(channelID, writeAPIKey);

    // Check the response code for debugging
    if (httpResponseCode == 200) {
      Serial.println("Data uploaded successfully");
    } else {
      Serial.print("Error uploading data: ");
      Serial.println(httpResponseCode);
    }
  }
  // Send data via LoRa
  LoRa.beginPacket();
  LoRa.print("Temperature: ");
  LoRa.print(temperature);
  LoRa.print("°C, Humidity: ");
  LoRa.print(humidity);
  LoRa.print("%, Rain Value: ");
  LoRa.print(rainValue);
  LoRa.endPacket();
  delay(5000);
}